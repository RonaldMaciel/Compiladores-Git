Terminals unused in grammar

    KW_THEN
    TOKEN_ERROR
    '%'


State 106 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarat

    2 declarat: declarations declarat
    3         | ε

    4 declarations: tipo TK_IDENTIFIER '=' literal ';'
    5             | tipo TK_IDENTIFIER '[' LIT_INT ']' create_array ';'
    6             | tipo TK_IDENTIFIER '(' func_parameters ')' bloco

    7 func_parameters: tipo TK_IDENTIFIER end_parameters
    8                | ε

    9 end_parameters: ',' tipo TK_IDENTIFIER end_parameters
   10               | ε

   11 literal: LIT_INT
   12        | LIT_CHAR
   13        | LIT_REAL

   14 tipo: KW_CHAR
   15     | KW_INT
   16     | KW_REAL
   17     | KW_BOOL

   18 create_array: ε
   19             | literal create_array

   20 bloco: '{' commands_list '}'

   21 commands_list: commands commands_list
   22              | ε

   23 commands: bloco
   24         | TK_IDENTIFIER '=' expr ';'
   25         | TK_IDENTIFIER '[' expr ']' '=' expr ';'
   26         | KW_IF '(' expr ')' commands
   27         | KW_IF '(' expr ')' commands KW_ELSE commands
   28         | KW_IF '(' expr ')' KW_LOOP commands
   29         | KW_OUTPUT output_list ';'
   30         | KW_RETURN expr ';'
   31         | ';'

   32 output_list: elements_to_output end_output

   33 end_output: ε
   34           | ',' elements_to_output end_output

   35 elements_to_output: LIT_STRING
   36                   | expr

   37 expr: literal
   38     | TK_IDENTIFIER
   39     | TK_IDENTIFIER '[' expr ']'
   40     | TK_IDENTIFIER '(' arguments_list ')'
   41     | expr '+' expr
   42     | expr '-' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr '&' expr
   48     | expr '|' expr
   49     | '~' expr
   50     | expr OPERATOR_LE expr
   51     | expr OPERATOR_GE expr
   52     | expr OPERATOR_EQ expr
   53     | expr OPERATOR_DIF expr
   54     | KW_INPUT '(' tipo ')'
   55     | '(' expr ')'

   56 arguments_list: expr arguments_list_end
   57               | ε

   58 arguments_list_end: ',' expr arguments_list_end
   59                   | ε


Terminals, with rules where they appear

    $end (0) 0
    '%' (37)
    '&' (38) 47
    '(' (40) 6 26 27 28 40 54 55
    ')' (41) 6 26 27 28 40 54 55
    '*' (42) 43
    '+' (43) 41
    ',' (44) 9 34 58
    '-' (45) 42
    '/' (47) 44
    ';' (59) 4 5 24 25 29 30 31
    '<' (60) 45
    '=' (61) 4 24 25
    '>' (62) 46
    '[' (91) 5 25 39
    ']' (93) 5 25 39
    '{' (123) 20
    '|' (124) 48
    '}' (125) 20
    '~' (126) 49
    error (256)
    KW_CHAR (258) 14
    KW_INT (259) 15
    KW_REAL (260) 16
    KW_BOOL (261) 17
    KW_IF (262) 26 27 28
    KW_THEN (263)
    KW_ELSE (264) 27
    KW_LOOP (265) 28
    KW_INPUT (266) 54
    KW_OUTPUT (267) 29
    KW_RETURN (268) 30
    OPERATOR_LE (269) 50
    OPERATOR_GE (270) 51
    OPERATOR_EQ (271) 52
    OPERATOR_DIF (272) 53
    TK_IDENTIFIER <symbol> (273) 4 5 6 7 9 24 25 38 39 40
    LIT_INT <symbol> (274) 5 11
    LIT_CHAR <symbol> (275) 12
    LIT_STRING <symbol> (276) 35
    LIT_REAL <symbol> (277) 13
    TOKEN_ERROR (278)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <ast> (44)
        on left: 1
        on right: 0
    declarat <ast> (45)
        on left: 2 3
        on right: 1 2
    declarations <ast> (46)
        on left: 4 5 6
        on right: 2
    func_parameters <ast> (47)
        on left: 7 8
        on right: 6
    end_parameters <ast> (48)
        on left: 9 10
        on right: 7 9
    literal <ast> (49)
        on left: 11 12 13
        on right: 4 19 37
    tipo <ast> (50)
        on left: 14 15 16 17
        on right: 4 5 6 7 9 54
    create_array <ast> (51)
        on left: 18 19
        on right: 5 19
    bloco <ast> (52)
        on left: 20
        on right: 6 23
    commands_list <ast> (53)
        on left: 21 22
        on right: 20 21
    commands <ast> (54)
        on left: 23 24 25 26 27 28 29 30 31
        on right: 21 26 27 28
    output_list <ast> (55)
        on left: 32
        on right: 29
    end_output <ast> (56)
        on left: 33 34
        on right: 32 34
    elements_to_output <ast> (57)
        on left: 35 36
        on right: 32 34
    expr <ast> (58)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 24 25 26 27 28 30 36 39 41 42 43 44 45 46 47 48 49 50 51 52 53 55 56 58
    arguments_list <ast> (59)
        on left: 56 57
        on right: 40
    arguments_list_end <ast> (60)
        on left: 58 59
        on right: 56 58


State 0

    0 $accept: • program $end

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarat)

    program       go to state 5
    declarat      go to state 6
    declarations  go to state 7
    tipo          go to state 8


State 1

   14 tipo: KW_CHAR •

    $default  reduce using rule 14 (tipo)


State 2

   15 tipo: KW_INT •

    $default  reduce using rule 15 (tipo)


State 3

   16 tipo: KW_REAL •

    $default  reduce using rule 16 (tipo)


State 4

   17 tipo: KW_BOOL •

    $default  reduce using rule 17 (tipo)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 9


State 6

    1 program: declarat •

    $default  reduce using rule 1 (program)


State 7

    2 declarat: declarations • declarat

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarat)

    declarat      go to state 10
    declarations  go to state 7
    tipo          go to state 8


State 8

    4 declarations: tipo • TK_IDENTIFIER '=' literal ';'
    5             | tipo • TK_IDENTIFIER '[' LIT_INT ']' create_array ';'
    6             | tipo • TK_IDENTIFIER '(' func_parameters ')' bloco

    TK_IDENTIFIER  shift, and go to state 11


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declarat: declarations declarat •

    $default  reduce using rule 2 (declarat)


State 11

    4 declarations: tipo TK_IDENTIFIER • '=' literal ';'
    5             | tipo TK_IDENTIFIER • '[' LIT_INT ']' create_array ';'
    6             | tipo TK_IDENTIFIER • '(' func_parameters ')' bloco

    '='  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14


State 12

    4 declarations: tipo TK_IDENTIFIER '=' • literal ';'

    LIT_INT   shift, and go to state 15
    LIT_CHAR  shift, and go to state 16
    LIT_REAL  shift, and go to state 17

    literal  go to state 18


State 13

    5 declarations: tipo TK_IDENTIFIER '[' • LIT_INT ']' create_array ';'

    LIT_INT  shift, and go to state 19


State 14

    6 declarations: tipo TK_IDENTIFIER '(' • func_parameters ')' bloco

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 8 (func_parameters)

    func_parameters  go to state 20
    tipo             go to state 21


State 15

   11 literal: LIT_INT •

    $default  reduce using rule 11 (literal)


State 16

   12 literal: LIT_CHAR •

    $default  reduce using rule 12 (literal)


State 17

   13 literal: LIT_REAL •

    $default  reduce using rule 13 (literal)


State 18

    4 declarations: tipo TK_IDENTIFIER '=' literal • ';'

    ';'  shift, and go to state 22


State 19

    5 declarations: tipo TK_IDENTIFIER '[' LIT_INT • ']' create_array ';'

    ']'  shift, and go to state 23


State 20

    6 declarations: tipo TK_IDENTIFIER '(' func_parameters • ')' bloco

    ')'  shift, and go to state 24


State 21

    7 func_parameters: tipo • TK_IDENTIFIER end_parameters

    TK_IDENTIFIER  shift, and go to state 25


State 22

    4 declarations: tipo TK_IDENTIFIER '=' literal ';' •

    $default  reduce using rule 4 (declarations)


State 23

    5 declarations: tipo TK_IDENTIFIER '[' LIT_INT ']' • create_array ';'

    LIT_INT   shift, and go to state 15
    LIT_CHAR  shift, and go to state 16
    LIT_REAL  shift, and go to state 17

    $default  reduce using rule 18 (create_array)

    literal       go to state 26
    create_array  go to state 27


State 24

    6 declarations: tipo TK_IDENTIFIER '(' func_parameters ')' • bloco

    '{'  shift, and go to state 28

    bloco  go to state 29


State 25

    7 func_parameters: tipo TK_IDENTIFIER • end_parameters

    ','  shift, and go to state 30

    $default  reduce using rule 10 (end_parameters)

    end_parameters  go to state 31


State 26

   19 create_array: literal • create_array

    LIT_INT   shift, and go to state 15
    LIT_CHAR  shift, and go to state 16
    LIT_REAL  shift, and go to state 17

    $default  reduce using rule 18 (create_array)

    literal       go to state 26
    create_array  go to state 32


State 27

    5 declarations: tipo TK_IDENTIFIER '[' LIT_INT ']' create_array • ';'

    ';'  shift, and go to state 33


State 28

   20 bloco: '{' • commands_list '}'

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 28

    $default  reduce using rule 22 (commands_list)

    bloco          go to state 39
    commands_list  go to state 40
    commands       go to state 41


State 29

    6 declarations: tipo TK_IDENTIFIER '(' func_parameters ')' bloco •

    $default  reduce using rule 6 (declarations)


State 30

    9 end_parameters: ',' • tipo TK_IDENTIFIER end_parameters

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    tipo  go to state 42


State 31

    7 func_parameters: tipo TK_IDENTIFIER end_parameters •

    $default  reduce using rule 7 (func_parameters)


State 32

   19 create_array: literal create_array •

    $default  reduce using rule 19 (create_array)


State 33

    5 declarations: tipo TK_IDENTIFIER '[' LIT_INT ']' create_array ';' •

    $default  reduce using rule 5 (declarations)


State 34

   26 commands: KW_IF • '(' expr ')' commands
   27         | KW_IF • '(' expr ')' commands KW_ELSE commands
   28         | KW_IF • '(' expr ')' KW_LOOP commands

    '('  shift, and go to state 43


State 35

   29 commands: KW_OUTPUT • output_list ';'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_STRING     shift, and go to state 46
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal             go to state 49
    output_list         go to state 50
    elements_to_output  go to state 51
    expr                go to state 52


State 36

   30 commands: KW_RETURN • expr ';'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 53


State 37

   24 commands: TK_IDENTIFIER • '=' expr ';'
   25         | TK_IDENTIFIER • '[' expr ']' '=' expr ';'

    '='  shift, and go to state 54
    '['  shift, and go to state 55


State 38

   31 commands: ';' •

    $default  reduce using rule 31 (commands)


State 39

   23 commands: bloco •

    $default  reduce using rule 23 (commands)


State 40

   20 bloco: '{' commands_list • '}'

    '}'  shift, and go to state 56


State 41

   21 commands_list: commands • commands_list

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 28

    $default  reduce using rule 22 (commands_list)

    bloco          go to state 39
    commands_list  go to state 57
    commands       go to state 41


State 42

    9 end_parameters: ',' tipo • TK_IDENTIFIER end_parameters

    TK_IDENTIFIER  shift, and go to state 58


State 43

   26 commands: KW_IF '(' • expr ')' commands
   27         | KW_IF '(' • expr ')' commands KW_ELSE commands
   28         | KW_IF '(' • expr ')' KW_LOOP commands

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 59


State 44

   54 expr: KW_INPUT • '(' tipo ')'

    '('  shift, and go to state 60


State 45

   38 expr: TK_IDENTIFIER •
   39     | TK_IDENTIFIER • '[' expr ']'
   40     | TK_IDENTIFIER • '(' arguments_list ')'

    '['  shift, and go to state 61
    '('  shift, and go to state 62

    $default  reduce using rule 38 (expr)


State 46

   35 elements_to_output: LIT_STRING •

    $default  reduce using rule 35 (elements_to_output)


State 47

   49 expr: '~' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 63


State 48

   55 expr: '(' • expr ')'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 64


State 49

   37 expr: literal •

    $default  reduce using rule 37 (expr)


State 50

   29 commands: KW_OUTPUT output_list • ';'

    ';'  shift, and go to state 65


State 51

   32 output_list: elements_to_output • end_output

    ','  shift, and go to state 66

    $default  reduce using rule 33 (end_output)

    end_output  go to state 67


State 52

   36 elements_to_output: expr •
   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79

    $default  reduce using rule 36 (elements_to_output)


State 53

   30 commands: KW_RETURN expr • ';'
   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ';'           shift, and go to state 80


State 54

   24 commands: TK_IDENTIFIER '=' • expr ';'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 81


State 55

   25 commands: TK_IDENTIFIER '[' • expr ']' '=' expr ';'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 82


State 56

   20 bloco: '{' commands_list '}' •

    $default  reduce using rule 20 (bloco)


State 57

   21 commands_list: commands commands_list •

    $default  reduce using rule 21 (commands_list)


State 58

    9 end_parameters: ',' tipo TK_IDENTIFIER • end_parameters

    ','  shift, and go to state 30

    $default  reduce using rule 10 (end_parameters)

    end_parameters  go to state 83


State 59

   26 commands: KW_IF '(' expr • ')' commands
   27         | KW_IF '(' expr • ')' commands KW_ELSE commands
   28         | KW_IF '(' expr • ')' KW_LOOP commands
   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ')'           shift, and go to state 84


State 60

   54 expr: KW_INPUT '(' • tipo ')'

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    tipo  go to state 85


State 61

   39 expr: TK_IDENTIFIER '[' • expr ']'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 86


State 62

   40 expr: TK_IDENTIFIER '(' • arguments_list ')'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    $default  reduce using rule 57 (arguments_list)

    literal         go to state 49
    expr            go to state 87
    arguments_list  go to state 88


State 63

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   49     | '~' expr •
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    $default  reduce using rule 49 (expr)


State 64

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr
   55     | '(' expr • ')'

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ')'           shift, and go to state 89


State 65

   29 commands: KW_OUTPUT output_list ';' •

    $default  reduce using rule 29 (commands)


State 66

   34 end_output: ',' • elements_to_output end_output

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_STRING     shift, and go to state 46
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal             go to state 49
    elements_to_output  go to state 90
    expr                go to state 52


State 67

   32 output_list: elements_to_output end_output •

    $default  reduce using rule 32 (output_list)


State 68

   50 expr: expr OPERATOR_LE • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 91


State 69

   51 expr: expr OPERATOR_GE • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 92


State 70

   52 expr: expr OPERATOR_EQ • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 93


State 71

   53 expr: expr OPERATOR_DIF • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 94


State 72

   45 expr: expr '<' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 95


State 73

   46 expr: expr '>' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 96


State 74

   41 expr: expr '+' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 97


State 75

   42 expr: expr '-' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 98


State 76

   43 expr: expr '*' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 99


State 77

   44 expr: expr '/' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 100


State 78

   48 expr: expr '|' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 101


State 79

   47 expr: expr '&' • expr

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 102


State 80

   30 commands: KW_RETURN expr ';' •

    $default  reduce using rule 30 (commands)


State 81

   24 commands: TK_IDENTIFIER '=' expr • ';'
   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ';'           shift, and go to state 103


State 82

   25 commands: TK_IDENTIFIER '[' expr • ']' '=' expr ';'
   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ']'           shift, and go to state 104


State 83

    9 end_parameters: ',' tipo TK_IDENTIFIER end_parameters •

    $default  reduce using rule 9 (end_parameters)


State 84

   26 commands: KW_IF '(' expr ')' • commands
   27         | KW_IF '(' expr ')' • commands KW_ELSE commands
   28         | KW_IF '(' expr ')' • KW_LOOP commands

    KW_IF          shift, and go to state 34
    KW_LOOP        shift, and go to state 105
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 28

    bloco     go to state 39
    commands  go to state 106


State 85

   54 expr: KW_INPUT '(' tipo • ')'

    ')'  shift, and go to state 107


State 86

   39 expr: TK_IDENTIFIER '[' expr • ']'
   41     | expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ']'           shift, and go to state 108


State 87

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr
   56 arguments_list: expr • arguments_list_end

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ','           shift, and go to state 109

    $default  reduce using rule 59 (arguments_list_end)

    arguments_list_end  go to state 110


State 88

   40 expr: TK_IDENTIFIER '(' arguments_list • ')'

    ')'  shift, and go to state 111


State 89

   55 expr: '(' expr ')' •

    $default  reduce using rule 55 (expr)


State 90

   34 end_output: ',' elements_to_output • end_output

    ','  shift, and go to state 66

    $default  reduce using rule 33 (end_output)

    end_output  go to state 112


State 91

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   50     | expr OPERATOR_LE expr •
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 50 (expr)


State 92

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   51     | expr OPERATOR_GE expr •
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 51 (expr)


State 93

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   52     | expr OPERATOR_EQ expr •
   53     | expr • OPERATOR_DIF expr

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 52 (expr)


State 94

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr
   53     | expr OPERATOR_DIF expr •

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 53 (expr)


State 95

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   45     | expr '<' expr •
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 45 (expr)


State 96

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   46     | expr '>' expr •
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 46 (expr)


State 97

   41 expr: expr • '+' expr
   41     | expr '+' expr •
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 41 (expr)


State 98

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   42     | expr '-' expr •
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 42 (expr)


State 99

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   43     | expr '*' expr •
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 43 (expr)


State 100

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   44     | expr '/' expr •
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    '|'  shift, and go to state 78
    '&'  shift, and go to state 79

    $default  reduce using rule 44 (expr)


State 101

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   48     | expr '|' expr •
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    $default  reduce using rule 48 (expr)


State 102

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   47     | expr '&' expr •
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    $default  reduce using rule 47 (expr)


State 103

   24 commands: TK_IDENTIFIER '=' expr ';' •

    $default  reduce using rule 24 (commands)


State 104

   25 commands: TK_IDENTIFIER '[' expr ']' • '=' expr ';'

    '='  shift, and go to state 113


State 105

   28 commands: KW_IF '(' expr ')' KW_LOOP • commands

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 28

    bloco     go to state 39
    commands  go to state 114


State 106

   26 commands: KW_IF '(' expr ')' commands •
   27         | KW_IF '(' expr ')' commands • KW_ELSE commands

    KW_ELSE  shift, and go to state 115

    KW_ELSE   [reduce using rule 26 (commands)]
    $default  reduce using rule 26 (commands)


State 107

   54 expr: KW_INPUT '(' tipo ')' •

    $default  reduce using rule 54 (expr)


State 108

   39 expr: TK_IDENTIFIER '[' expr ']' •

    $default  reduce using rule 39 (expr)


State 109

   58 arguments_list_end: ',' • expr arguments_list_end

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 116


State 110

   56 arguments_list: expr arguments_list_end •

    $default  reduce using rule 56 (arguments_list)


State 111

   40 expr: TK_IDENTIFIER '(' arguments_list ')' •

    $default  reduce using rule 40 (expr)


State 112

   34 end_output: ',' elements_to_output end_output •

    $default  reduce using rule 34 (end_output)


State 113

   25 commands: TK_IDENTIFIER '[' expr ']' '=' • expr ';'

    KW_INPUT       shift, and go to state 44
    TK_IDENTIFIER  shift, and go to state 45
    LIT_INT        shift, and go to state 15
    LIT_CHAR       shift, and go to state 16
    LIT_REAL       shift, and go to state 17
    '~'            shift, and go to state 47
    '('            shift, and go to state 48

    literal  go to state 49
    expr     go to state 117


State 114

   28 commands: KW_IF '(' expr ')' KW_LOOP commands •

    $default  reduce using rule 28 (commands)


State 115

   27 commands: KW_IF '(' expr ')' commands KW_ELSE • commands

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 28

    bloco     go to state 39
    commands  go to state 118


State 116

   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr
   58 arguments_list_end: ',' expr • arguments_list_end

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ','           shift, and go to state 109

    $default  reduce using rule 59 (arguments_list_end)

    arguments_list_end  go to state 119


State 117

   25 commands: TK_IDENTIFIER '[' expr ']' '=' expr • ';'
   41 expr: expr • '+' expr
   42     | expr • '-' expr
   43     | expr • '*' expr
   44     | expr • '/' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • '&' expr
   48     | expr • '|' expr
   50     | expr • OPERATOR_LE expr
   51     | expr • OPERATOR_GE expr
   52     | expr • OPERATOR_EQ expr
   53     | expr • OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 68
    OPERATOR_GE   shift, and go to state 69
    OPERATOR_EQ   shift, and go to state 70
    OPERATOR_DIF  shift, and go to state 71
    '<'           shift, and go to state 72
    '>'           shift, and go to state 73
    '+'           shift, and go to state 74
    '-'           shift, and go to state 75
    '*'           shift, and go to state 76
    '/'           shift, and go to state 77
    '|'           shift, and go to state 78
    '&'           shift, and go to state 79
    ';'           shift, and go to state 120


State 118

   27 commands: KW_IF '(' expr ')' commands KW_ELSE commands •

    $default  reduce using rule 27 (commands)


State 119

   58 arguments_list_end: ',' expr arguments_list_end •

    $default  reduce using rule 58 (arguments_list_end)


State 120

   25 commands: TK_IDENTIFIER '[' expr ']' '=' expr ';' •

    $default  reduce using rule 25 (commands)
